#!/usr/bin/env bash

# To get this going, all you need is an equilibrated configuration (produce using equil.sh)

GRO="wiggle.gro"  # initial dry equilibrated configuration
n=1038  # number of water molecules to insert
t=1000 # picoseconds of simulation time between insertions
p=0.6  # probability of finding a water molecule in the pore vs. tail region. e.g. 3:2 ratio corresponds to p = 0.6
emsteps=50  # number of steps to take during energy minimization directly after adding water

while getopts "g:t:n:e:" opt; do
    case $opt in
        g) GRO=$OPTARG;;
        t) t=$OPTARG;;
        n) n=$OPTARG;;
        e) emsteps=$OPTARG;;
    esac
done

# generate topology to be modified
input.py -c ${GRO}

cp ${GRO} npt.gro
mv topol.top topol_dry.top

for i in $(seq 1 ${n}); do

    echo "Adding water molecule # ${i}"
    # place water molecule in structure
    solvate_equilibrated.py -g npt.gro -t topol_dry.top -p ${p} --emsteps ${emsteps}

    # create run files. Use berendsen barostat since the system was minimized and new molecules have been added
    input.py -S -l ${t} -f 5 --barostat berendsen --genvel 'yes' -c em.gro

    # run simulation. top_intermediate.top was generated by solvate_equilibrated.py
    gmx grompp -f npt.mdp -p top_intermediate -c em.gro -o npt > /dev/null 2>&1
    gmx mdrun -v -deffnm npt

    rm \#*

done